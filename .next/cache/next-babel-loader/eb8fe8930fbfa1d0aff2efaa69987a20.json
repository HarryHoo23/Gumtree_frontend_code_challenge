{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\harry\\\\Downloads\\\\gtau-fe-test\\\\components\\\\Listings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nvar ACTIONS = ['View', 'Reply'];\n\nvar formatAsCurrency = function formatAsCurrency(_int) {\n  // Formate integer to currency Format.\n  return _int ? _int.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).split('.')[0] : 'Wanted';\n};\n\nvar Listing = function Listing(props) {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.item.title), __jsx(\"div\", {\n    className: \"card-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, formatAsCurrency(props.item.price)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, props.item.location)), props.item.imgUrl && __jsx(\"img\", {\n    src: props.item.imgUrl,\n    alt: props.item.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    className: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, props.item.description), __jsx(\"div\", {\n    className: \"button-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, ACTIONS.map(function (btn, index) {\n    return __jsx(\"button\", {\n      key: index,\n      className: \"btn\",\n      onClick: function onClick() {\n        return console.log(\"\".concat(btn, \": \").concat(props.item.title));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, btn);\n  }))));\n};\n\n_c = Listing;\n\nvar Listings = function Listings(props) {\n  _s();\n\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  var _useState = useState(),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setIsLoading(true); //Fetch data from api endpoint.\n\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"http://localhost:3000\".concat(props.dataEndpoint));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n              setList(data);\n              setIsLoading(false);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 12]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // fetch data when Listing page is first rendered.  \n\n\n  useEffect(function () {\n    fetchData();\n  }, []); // If list exist and \n\n  var renderedList = list && list.length > 0 ? list.map(function (item) {\n    return __jsx(Listing, {\n      key: item.title,\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }\n    });\n  }) : __jsx(\"div\", {\n    className: \"error__result\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Cannot find your result.\"));\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, list ? list.length : 0, \" results\"), \" for\", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \" Ferrari \"), \"in \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 14\n    }\n  }, \"Australia\"))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, !isLoading ? renderedList : __jsx(\"div\", {\n    className: \"error__result\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))));\n};\n\n_s(Listings, \"Zp5P5YTnfESyUvQrVBc5n46GEeQ=\");\n\n_c2 = Listings;\nexport default Listings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Listing\");\n$RefreshReg$(_c2, \"Listings\");","map":{"version":3,"sources":["C:/Users/harry/Downloads/gtau-fe-test/components/Listings.js"],"names":["useEffect","useState","ACTIONS","formatAsCurrency","int","toLocaleString","style","currency","split","Listing","props","item","title","price","location","imgUrl","description","map","btn","index","console","log","Listings","list","setList","isLoading","setIsLoading","fetchData","fetch","dataEndpoint","response","json","data","renderedList","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = (int) => {\n  // Formate integer to currency Format.\n  return int\n    ? int\n        .toLocaleString('en-US', {\n          style: 'currency',\n          currency: 'USD',\n        })\n        .split('.')[0]\n    : 'Wanted';\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  return (\n    <div className='listing'>\n      <div className='card'>\n        <h3 className='title'>{props.item.title}</h3>\n        <div className='card-info'>\n          <h3>{formatAsCurrency(props.item.price)}</h3>\n          <p>{props.item.location}</p>\n        </div>\n        {props.item.imgUrl && (\n          <img src={props.item.imgUrl} alt={props.item.title} />\n        )}\n        {/* Show image if image url exists */}\n        <p className='description'>{props.item.description}</p>\n        <div className='button-group'>\n          {ACTIONS.map((btn, index) => {\n            return (\n              <button\n                key={index}\n                className='btn'\n                onClick={() => console.log(`${btn}: ${props.item.title}`)}\n              >\n                {btn}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const [list, setList] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    //Fetch data from api endpoint.\n    try {\n      const response = await fetch(\n        `http://localhost:3000${props.dataEndpoint}`\n      );\n      const data = await response.json();\n      setList(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // fetch data when Listing page is first rendered.  \n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If list exist and \n  const renderedList =\n    list && list.length > 0 ? (\n      list.map((item) => {\n        return <Listing key={item.title} item={item} />;\n      })\n    ) : (\n      <div className='error__result'>\n        <h1>Cannot find your result.</h1>\n      </div>\n    );\n\n  return (\n    <div>\n      <div className='listings__header'>\n        <h1>Search Results</h1>\n        <p>\n          <span>{list ? list.length : 0} results</span> for\n          <span> Ferrari </span>\n          in <span>Australia</span>\n        </p>\n      </div>\n      <div className='listings__grid'>\n        {!isLoading ? (\n          renderedList\n        ) : (\n          <div className='error__result'>\n            <h1>Loading...</h1>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}