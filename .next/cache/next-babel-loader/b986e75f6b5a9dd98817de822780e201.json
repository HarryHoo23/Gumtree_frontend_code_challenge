{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harry\\\\Downloads\\\\gtau-fe-test\\\\components\\\\Listings.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = int => {\n  // TODO\n  const currency = '$' + int.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  return currency;\n};\n\nconst Listing = props => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, props.item.title);\n};\n\nconst Listings = props => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const {\n    0: list,\n    1: setList\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`http://localhost:3000${props.dataEndpoint}`).then(res => res.json()).then(data => {\n      setList(data);\n      setIsLoading(false);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }\n  }, list, \" results\"), \" for \")), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, !isLoading ? list && list.map(item => {\n    return __jsx(Listing, {\n      key: item.title,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }\n    });\n  }) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Loading...\")));\n};\n\nexport default Listings;","map":{"version":3,"sources":["C:/Users/harry/Downloads/gtau-fe-test/components/Listings.js"],"names":["useEffect","useState","ACTIONS","formatAsCurrency","int","currency","toFixed","replace","Listing","props","item","title","Listings","list","setList","isLoading","setIsLoading","fetch","dataEndpoint","then","res","json","data","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,CAAhB;;AAEA,MAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAChC;AACA,QAAMC,QAAQ,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeC,OAAf,CAAuB,mBAAvB,EAA4C,KAA5C,CAAvB;AACA,SAAOF,QAAP;AACD,CAJD;;AAMA,MAAMG,OAAO,GAAIC,KAAD,IAAW;AACzB;AACA;AAEA,SAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,KAAK,CAACC,IAAN,CAAWC,KAArC,CAAP;AACD,CALD;;AAOA,MAAMC,QAAQ,GAAIH,KAAD,IAAW;AAC1B;AACA;AACA;AACA;AACA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACc,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,KAAK,CAAE,wBAAuBR,KAAK,CAACS,YAAa,EAA5C,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdR,MAAAA,OAAO,CAACQ,IAAD,CAAP;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADR,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,IAAP,aAAH,UAFR,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,SAAD,GACCF,IAAI,IACJA,IAAI,CAACU,GAAL,CAAUb,IAAD,IAAU;AACjB,WAAO,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAnB;AAA0B,MAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAFD,GAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CALF,CADF;AAkBD,CApCD;;AAsCA,eAAeE,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = (int) => {\n  // TODO\n  const currency = '$' + int.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  return currency;\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  return <div className='listing'>{props.item.title}</div>;\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const [list, setList] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`http://localhost:3000${props.dataEndpoint}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setList(data);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className='listings__header'>\n              <h1>Search Results</h1>\n              <p><span>{list} results</span> for </p>\n        </div>\n      <div className='listings__grid'>\n        {!isLoading ? (\n          list &&\n          list.map((item) => {\n            return <Listing key={item.title} item={item} />;\n          })\n        ) : (\n          <h1>Loading...</h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}