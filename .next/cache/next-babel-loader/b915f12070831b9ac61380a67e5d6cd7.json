{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harry\\\\Downloads\\\\gtau-fe-test\\\\components\\\\Listings.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = int => {\n  return int ? int.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).split('.')[0] : 'Wanted';\n};\n\nconst Listing = props => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  const handleViewBtnClicked = () => {\n    console.log();\n  };\n\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, props.item.title), __jsx(\"div\", {\n    className: \"card-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, formatAsCurrency(props.item.price)), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, props.item.location)), props.item.imgUrl && __jsx(\"img\", {\n    src: props.item.imgUrl,\n    alt: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }\n  }), __jsx(\"p\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, props.item.description), __jsx(\"div\", {\n    className: \"button-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, ACTIONS.map(btn => {\n    return __jsx(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }\n    }, btn);\n  }))));\n};\n\nconst Listings = props => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const {\n    0: list,\n    1: setList\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const fetchData = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`http://localhost:3000${props.dataEndpoint}`);\n      const data = await response.json();\n      setList(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const renderedList = list && list.length > 0 ? list.map(item => {\n    return __jsx(Listing, {\n      key: item.title,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    });\n  }) : __jsx(\"div\", {\n    className: \"error__result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Cannot find your result.\"));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, list ? list.length : 0, \" results\"), \" for\", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \" Ferrari \"), \"in \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }\n  }, \"Australia\"))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, !isLoading ? renderedList : __jsx(\"div\", {\n    className: \"error__result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Loading...\"))));\n};\n\nexport default Listings;","map":{"version":3,"sources":["C:/Users/harry/Downloads/gtau-fe-test/components/Listings.js"],"names":["useEffect","useState","ACTIONS","formatAsCurrency","int","toLocaleString","style","currency","split","Listing","props","handleViewBtnClicked","console","log","item","title","price","location","imgUrl","description","map","btn","Listings","list","setList","isLoading","setIsLoading","fetchData","response","fetch","dataEndpoint","data","json","error","renderedList","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,CAAhB;;AAEA,MAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAChC,SAAOA,GAAG,GACNA,GAAG,CACAC,cADH,CACkB,OADlB,EAC2B;AACvBC,IAAAA,KAAK,EAAE,UADgB;AAEvBC,IAAAA,QAAQ,EAAE;AAFa,GAD3B,EAKGC,KALH,CAKS,GALT,EAKc,CALd,CADM,GAON,QAPJ;AAQD,CATD;;AAWA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACA;AACE,QAAMC,oBAAoB,GAAG,MAAM;AAC/BC,IAAAA,OAAO,CAACC,GAAR;AACH,GAFD;;AAIF,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBH,KAAK,CAACI,IAAN,CAAWC,KAAlC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,gBAAgB,CAACO,KAAK,CAACI,IAAN,CAAWE,KAAZ,CAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,KAAK,CAACI,IAAN,CAAWG,QAAf,CAFF,CAFF,EAMGP,KAAK,CAACI,IAAN,CAAWI,MAAX,IAAqB;AAAK,IAAA,GAAG,EAAER,KAAK,CAACI,IAAN,CAAWI,MAArB;AAA6B,IAAA,GAAG,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANxB,EAOE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BR,KAAK,CAACI,IAAN,CAAWK,WAAvC,CAPF,EAQE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACWjB,OAAO,CAACkB,GAAR,CAAaC,GAAG,IAAI;AACjB,WACI;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBA,GAAzB,CADJ;AAGX,GAJQ,CADX,CARF,CADF,CADF;AAoBD,CA3BD;;AA6BA,MAAMC,QAAQ,GAAIZ,KAAD,IAAW;AAC1B;AACA;AACA;AACA;AACA,QAAM;AAAA,OAACa,IAAD;AAAA,OAAOC;AAAP,MAAkBvB,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACwB,SAAD;AAAA,OAAYC;AAAZ,MAA4BzB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAM0B,SAAS,GAAG,YAAY;AAC5BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,wBAAuBnB,KAAK,CAACoB,YAAa,EADjB,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAR,MAAAA,OAAO,CAACO,IAAD,CAAP;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPD,CAOE,OAAOO,KAAP,EAAc;AACdrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ;AACD;AACF,GAZD;;AAcAjC,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMO,YAAY,GAChBX,IAAI,IAAIA,IAAI,CAACY,MAAL,GAAc,CAAtB,GACEZ,IAAI,CAACH,GAAL,CAAUN,IAAD,IAAU;AACjB,WAAO,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAnB;AAA0B,MAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CADF,GAKE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CANJ;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOS,IAAI,GAAGA,IAAI,CAACY,MAAR,GAAiB,CAA5B,aADF,UAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,SAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHL,CAFF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACV,SAAD,GACCS,YADD,GAGC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAJJ,CATF,CADF;AAqBD,CA1DD;;AA4DA,eAAeZ,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = (int) => {\n  return int\n    ? int\n        .toLocaleString('en-US', {\n          style: 'currency',\n          currency: 'USD',\n        })\n        .split('.')[0]\n    : 'Wanted';\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n    const handleViewBtnClicked = () => {\n        console.log();\n    }\n    \n  return (\n    <div className='listing'>\n      <div className='card'>\n        <h3 className='title'>{props.item.title}</h3>\n        <div className='card-info'>\n          <h3>{formatAsCurrency(props.item.price)}</h3>\n          <p>{props.item.location}</p>\n        </div>\n        {props.item.imgUrl && <img src={props.item.imgUrl} alt='img' />}\n        <p className='description'>{props.item.description}</p>\n        <div className='button-group'>\n                  {ACTIONS.map((btn => {\n                      return (\n                          <button className='btn'>{btn}</button>\n              )\n          }))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const [list, setList] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        `http://localhost:3000${props.dataEndpoint}`\n      );\n      const data = await response.json();\n      setList(data);\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const renderedList =\n    list && list.length > 0 ? (\n      list.map((item) => {\n        return <Listing key={item.title} item={item} />;\n      })\n    ) : (\n      <div className='error__result'>\n        <h1>Cannot find your result.</h1>\n      </div>\n    );\n\n  return (\n    <div>\n      <div className='listings__header'>\n        <h1>Search Results</h1>\n        <p>\n          <span>{list ? list.length : 0} results</span> for\n          <span> Ferrari </span>\n          in <span>Australia</span>\n        </p>\n      </div>\n      <div className='listings__grid'>\n        {!isLoading ? (\n          renderedList\n        ) : (\n          <div className='error__result'>\n            <h1>Loading...</h1>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}