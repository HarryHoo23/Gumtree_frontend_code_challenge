{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\harry\\\\Downloads\\\\gtau-fe-test\\\\components\\\\Listings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nvar ACTIONS = ['View', 'Reply'];\n\nvar formatAsCurrency = function formatAsCurrency(_int) {\n  return _int ? _int.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }) : \"Wanted\";\n};\n\nvar Listing = function Listing(props) {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, props.item.title), __jsx(\"div\", {\n    className: \"card-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, formatAsCurrency(props.item.price)), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, props.item.location)), props.item.imgUrl && __jsx(\"img\", {\n    src: props.item.imgUrl,\n    alt: \"img\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }\n  })));\n};\n\n_c = Listing;\n\nvar Listings = function Listings(props) {\n  _s();\n\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  var _useState = useState(),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    fetch(\"http://localhost:3000\".concat(props.dataEndpoint)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setList(data);\n      setIsLoading(false);\n    });\n  }, []);\n  var renderedList = list && list.length > 0 ? list.map(function (item) {\n    return __jsx(Listing, {\n      key: item.title,\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    });\n  }) : __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Cannot find your result.\");\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, list ? list.length : 0, \" results\"), \" for\", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Ferrari \"), \"in \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }\n  }, \"Australia\"))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, !isLoading ? renderedList : __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 38\n    }\n  }, \"Loading...\")));\n};\n\n_s(Listings, \"Zp5P5YTnfESyUvQrVBc5n46GEeQ=\");\n\n_c2 = Listings;\nexport default Listings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Listing\");\n$RefreshReg$(_c2, \"Listings\");","map":{"version":3,"sources":["C:/Users/harry/Downloads/gtau-fe-test/components/Listings.js"],"names":["useEffect","useState","ACTIONS","formatAsCurrency","int","toLocaleString","style","currency","Listing","props","item","title","price","location","imgUrl","Listings","list","setList","isLoading","setIsLoading","fetch","dataEndpoint","then","res","json","data","renderedList","length","map"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,IAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,CAAhB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAS;AAChC,SAAOA,IAAG,GAAGA,IAAG,CAACC,cAAJ,CAAmB,OAAnB,EAA4B;AACvCC,IAAAA,KAAK,EAAE,UADgC;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAA5B,CAAH,GAGL,QAHL;AAID,CALD;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzB;AACA;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,gBAAgB,CAACM,KAAK,CAACC,IAAN,CAAWE,KAAZ,CAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACC,IAAN,CAAWG,QAAf,CAFF,CAFF,EAMGJ,KAAK,CAACC,IAAN,CAAWI,MAAX,IAAqB;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACC,IAAN,CAAWI,MAArB;AAA6B,IAAA,GAAG,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANxB,CADF,CADF;AAYD,CAhBD;;KAAMN,O;;AAkBN,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACN,KAAD,EAAW;AAAA;;AAC1B;AACA;AACA;AACA;AACA,kBAAwBR,QAAQ,EAAhC;AAAA,MAAOe,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkChB,QAAQ,CAAC,KAAD,CAA1C;AAAA,MAAOiB,SAAP;AAAA,MAAkBC,YAAlB;;AAEAnB,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,KAAK,gCAAyBX,KAAK,CAACY,YAA/B,EAAL,CACGC,IADH,CACQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACdR,MAAAA,OAAO,CAACQ,IAAD,CAAP;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AAUA,MAAMO,YAAY,GAChBV,IAAI,IAAIA,IAAI,CAACW,MAAL,GAAc,CAAtB,GACEX,IAAI,CAACY,GAAL,CAAS,UAAClB,IAAD,EAAU;AACjB,WAAO,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAnB;AAA0B,MAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CADF,GAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANJ;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOM,IAAI,GAAGA,IAAI,CAACW,MAAR,GAAiB,CAA5B,aADF,UAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,SAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHL,CAFF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACT,SAAD,GAAaQ,YAAb,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD/B,CATF,CADF;AAeD,CA1CD;;GAAMX,Q;;MAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = (int) => {\n  return int ? int.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  }) : \"Wanted\"\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  return (\n    <div className='listing'>\n      <div className='card'>\n        <h5>{props.item.title}</h5>\n        <div className='card-info'>\n          <h5>{formatAsCurrency(props.item.price)}</h5>\n          <p>{props.item.location}</p>\n        </div>\n        {props.item.imgUrl && <img src={props.item.imgUrl} alt='img' />}\n      </div>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const [list, setList] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`http://localhost:3000${props.dataEndpoint}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setList(data);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const renderedList =\n    list && list.length > 0 ? (\n      list.map((item) => {\n        return <Listing key={item.title} item={item} />;\n      })\n    ) : (\n      <h1>Cannot find your result.</h1>\n    );\n\n  return (\n    <div>\n      <div className='listings__header'>\n        <h1>Search Results</h1>\n        <p>\n          <span>{list ? list.length : 0} results</span> for\n          <span>Ferrari </span>\n          in <span>Australia</span>\n        </p>\n      </div>\n      <div className='listings__grid'>\n        {!isLoading ? renderedList : <h1>Loading...</h1>}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}