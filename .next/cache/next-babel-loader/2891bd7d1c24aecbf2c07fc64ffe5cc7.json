{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harry\\\\Downloads\\\\gtau-fe-test\\\\components\\\\Listings.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = int => {\n  // TODO\n  const currency = '$' + int.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  return currency;\n};\n\nconst Listing = props => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n  return __jsx(\"div\", {\n    className: \"listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, props.item.title, props.item.imgUrl && __jsx(\"img\", {\n    src: props.item.imgUrl,\n    alt: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 31\n    }\n  })));\n};\n\nconst Listings = props => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const {\n    0: list,\n    1: setList\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`http://localhost:3000${props.dataEndpoint}`).then(res => res.json()).then(data => {\n      setList(data);\n      setIsLoading(false);\n    });\n  }, []);\n  const renderedList = list && list.length > 0 ? list.map(item => {\n    return __jsx(Listing, {\n      key: item.title,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    });\n  }) : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Cannot find your result.\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Search Results\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, list ? list.length : 0, \" results\"), \" for\", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Ferrari \"), \"in \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }\n  }, \"Australia\"))), __jsx(\"div\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, !isLoading ? renderedList : __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 38\n    }\n  }, \"Loading...\")));\n};\n\nexport default Listings;","map":{"version":3,"sources":["C:/Users/harry/Downloads/gtau-fe-test/components/Listings.js"],"names":["useEffect","useState","ACTIONS","formatAsCurrency","int","currency","toFixed","replace","Listing","props","item","title","imgUrl","Listings","list","setList","isLoading","setIsLoading","fetch","dataEndpoint","then","res","json","data","renderedList","length","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,CAAhB;;AAEA,MAAMC,gBAAgB,GAAIC,GAAD,IAAS;AAChC;AACA,QAAMC,QAAQ,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAY,CAAZ,EAAeC,OAAf,CAAuB,mBAAvB,EAA4C,KAA5C,CAAvB;AACA,SAAOF,QAAP;AACD,CAJD;;AAMA,MAAMG,OAAO,GAAIC,KAAD,IAAW;AACzB;AACA;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IAAN,CAAWC,KADd,EAEGF,KAAK,CAACC,IAAN,CAAWE,MAAX,IAAqB;AAAK,IAAA,GAAG,EAAEH,KAAK,CAACC,IAAN,CAAWE,MAArB;AAA6B,IAAA,GAAG,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxB,CADF,CADF;AAQD,CAZD;;AAcA,MAAMC,QAAQ,GAAIJ,KAAD,IAAW;AAC1B;AACA;AACA;AACA;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,EAAhC;AACA,QAAM;AAAA,OAACe,SAAD;AAAA,OAAYC;AAAZ,MAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,KAAK,CAAE,wBAAuBT,KAAK,CAACU,YAAa,EAA5C,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdR,MAAAA,OAAO,CAACQ,IAAD,CAAP;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALH;AAMD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMO,YAAY,GAChBV,IAAI,IAAIA,IAAI,CAACW,MAAL,GAAc,CAAtB,GACEX,IAAI,CAACY,GAAL,CAAUhB,IAAD,IAAU;AACjB,WAAO,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAnB;AAA0B,MAAA,IAAI,EAAED,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CADF,GAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANJ;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,IAAI,GAAGA,IAAI,CAACW,MAAR,GAAiB,CAA5B,aADF,UAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,SAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHL,CAFF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACT,SAAD,GAAaQ,YAAb,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD/B,CATF,CADF;AAeD,CA1CD;;AA4CA,eAAeX,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst ACTIONS = ['View', 'Reply'];\n\nconst formatAsCurrency = (int) => {\n  // TODO\n  const currency = '$' + int.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n  return currency;\n};\n\nconst Listing = (props) => {\n  // TODO\n  // This should be the component which renders an individual listing to the page\n\n  return (\n    <div className='listing'>\n      <div className='card'>\n        {props.item.title}\n        {props.item.imgUrl && <img src={props.item.imgUrl} alt='img' />}\n      </div>\n    </div>\n  );\n};\n\nconst Listings = (props) => {\n  // TODO\n  // This component should make a request to the api endpoint (props.dataEndpoint)\n  // then render the result as set of listings as per the design mocks\n  // check props passed in from parent for other values that you may need to use\n  const [list, setList] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`http://localhost:3000${props.dataEndpoint}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setList(data);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const renderedList =\n    list && list.length > 0 ? (\n      list.map((item) => {\n        return <Listing key={item.title} item={item} />;\n      })\n    ) : (\n      <h1>Cannot find your result.</h1>\n    );\n\n  return (\n    <div>\n      <div className='listings__header'>\n        <h1>Search Results</h1>\n        <p>\n          <span>{list ? list.length : 0} results</span> for\n          <span>Ferrari </span>\n          in <span>Australia</span>\n        </p>\n      </div>\n      <div className='listings__grid'>\n        {!isLoading ? renderedList : <h1>Loading...</h1>}\n      </div>\n    </div>\n  );\n};\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}